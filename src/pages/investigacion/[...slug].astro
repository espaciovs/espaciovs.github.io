---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import { render } from 'astro:content';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.id },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;

function replaceImagePaths(content: string) {
    // Busca <p>![[nombre-archivo.extension]]</p> y reempl√°zalo por <p><img src="/img/general/nombre-archivo.extension" alt=""></p>
    const regex = /<p>!\[\[([^\]]+\.(png|jpg|jpeg|gif|webp|svg))\]\]<\/p>/gi;
    return content.replace(regex, '<p><img src="/$1" alt=""></p>');
}

// Modificar el HTML renderizado
if (post.rendered && post.rendered.html) {
    post.rendered.html = replaceImagePaths(post.rendered.html);
}

const titulo = post.filePath.split('/').pop().replace('.md', '');

const { Content } = await render(post);
---

<BlogPost {...post.data}>
	<Content/>
</BlogPost>
